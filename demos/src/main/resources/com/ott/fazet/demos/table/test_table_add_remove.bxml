<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to you under the Apache License,
Version 2.0 (the "License"); you may not use this file except in
compliance with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<view:TheWindow title="Demo FazetTableView" maximized="true"
    xmlns:bxml="http://pivot.apache.org/bxml"
    xmlns:view="com.ott.fazet.demos.table"
    xmlns:ott="com.ott.fazet.wtk"
    xmlns="org.apache.pivot.wtk">
	    <ScrollPane>
	<BoxPane orientation="vertical" styles="{padding:20}">
    <BoxPane>
	    <BoxPane orientation="vertical">
			<Label text="Fazet Table view"/>
            <bxml:define>
                <ButtonGroup bxml:id="fgroup"/>
            </bxml:define>
	        <GridPane columnCount="2" styles="{horizontalSpacing:1, verticalSpacing:1}">
	            <GridPane.Row>
		            <RadioButton bxml:id="noneButton" buttonData="NONE" buttonGroup="$fgroup"/>
	                <GridPane.Filler/>
	            </GridPane.Row>
	            <GridPane.Row>
		            <RadioButton bxml:id="singleButton" buttonData="SINGLE" buttonGroup="$fgroup"/>
		            <RadioButton bxml:id="multiButton" buttonData="MULTI" buttonGroup="$fgroup"/>
	                <GridPane.Filler/>
	            </GridPane.Row>
	            <GridPane.Row>
		            <RadioButton bxml:id="singleCellButton" buttonData="SINGLECELL" buttonGroup="$fgroup"/>
		            <RadioButton bxml:id="multiCellsButton" buttonData="MULTICELLS" buttonGroup="$fgroup" selected="true"/>
	                <GridPane.Filler/>
	            </GridPane.Row>
	        </GridPane>
            <BoxPane>
            	<TextInput bxml:id="rowIndexInput"/>
            	<PushButton bxml:id="removeRowButton" buttonData="Remove row" />
            	<PushButton bxml:id="addRowButton" buttonData="Add row" />
            </BoxPane>
		    <ScrollPane>
				<ott:FazetTableView bxml:id="tableView" selectMode="MULTICELLS" height="400">
				    <columns>
				        <ott:TableView.Column name="i" width="75" headerData="i"/>
				        <ott:TableView.Column name="a" width="75" headerData="a"/>
				        <ott:TableView.Column name="b" width="75" headerData="b"/>
				        <ott:TableView.Column name="c" width="75" headerData="c"/>
				        <ott:TableView.Column name="d" width="1*" headerData="d"/>
				    </columns>
				    <componentListeners>
				        <![CDATA[
				        importClass(org.apache.pivot.collections.ArrayList);
				        importClass(org.apache.pivot.collections.HashMap);
				
				        function parentChanged(component, previousParent) {
				            if (component.getParent() != null) {
				                var tableData = new ArrayList();
				
				                for (var i = 0; i < 20; i++) {
				                    var row = new HashMap();
				                    row.put(new java.lang.String("i"), new java.lang.String(i));
				                    row.put(new java.lang.String("a"), new java.lang.String(Math.floor(Math.random() * 100)));
				                    row.put(new java.lang.String("b"), new java.lang.String(Math.floor(Math.random() * 1000)));
				                    row.put(new java.lang.String("c"), new java.lang.String(Math.floor(Math.random() * 10000)));
				                    tableData.add(row);
				                }
				
				                component.setTableData(tableData);
				            }
				        }
				        ]]>
				    </componentListeners>
				</ott:FazetTableView>
			    <columnHeader>
			        <ott:TableViewHeader tableView="$tableView"/>
			    </columnHeader>
		    </ScrollPane>
	    </BoxPane>
	    
		    <Separator styles="{padding:40}"/>
		<BoxPane orientation="vertical">
			<Label text="Pivot Table view"/>
            <bxml:define>
                <ButtonGroup bxml:id="sgroup"/>
            </bxml:define>
	        <GridPane columnCount="2" styles="{horizontalSpacing:1, verticalSpacing:1}">
	            <GridPane.Row>
		            <RadioButton buttonData="NONE" buttonGroup="$sgroup"/>
	                <GridPane.Filler/>
	            </GridPane.Row>
	            <GridPane.Row>
		            <RadioButton buttonData="SINGLE" buttonGroup="$sgroup"/>
		            <RadioButton buttonData="MULTI" buttonGroup="$sgroup" selected="true"/>
	                <GridPane.Filler/>
	            </GridPane.Row>
	        </GridPane>
            <BoxPane>
            	<TextInput bxml:id="rowIndexInput2"/>
            	<PushButton bxml:id="removeRowButton2" buttonData="Remove row" />
            	<PushButton bxml:id="addRowButton2" buttonData="Add row" />
            </BoxPane>
		    <ScrollPane>
				<TableView bxml:id="tableView2" selectMode="MULTI" height="400">
				    <columns>
				        <TableView.Column name="i" width="75" headerData="i"/>
				        <TableView.Column name="a" width="75" headerData="a"/>
				        <TableView.Column name="b" width="75" headerData="b"/>
				        <TableView.Column name="c" width="75" headerData="c"/>
				        <TableView.Column name="d" width="1*" headerData="d"/>
				    </columns>
				    <componentListeners>
				        <![CDATA[
				        importClass(org.apache.pivot.collections.ArrayList);
				        importClass(org.apache.pivot.collections.HashMap);
				
				        function parentChanged(component, previousParent) {
				            if (component.getParent() != null) {
				                var tableData = new ArrayList();
				
				                for (var i = 0; i < 20; i++) {
				                    var row = new HashMap();
				                    row.put("i", new String(i));
				                    row.put("a", new String(Math.floor(Math.random() * 100)));
				                    row.put("b", new String(Math.floor(Math.random() * 1000)));
				                    row.put("c", new String(Math.floor(Math.random() * 10000)));
				                    tableData.add(row);
				                }
				
				                component.setTableData(tableData);
				            }
				        }
				        ]]>
				    </componentListeners>
				</TableView>
			    <columnHeader>
			        <TableViewHeader tableView="$tableView2"/>
			    </columnHeader>
		    </ScrollPane>
		</BoxPane>
    </BoxPane>
	      <Border styles="{color:10}">
	          <ScrollPane 
	             >
	              <TextArea bxml:id="textArea" text="" minimumHeight="200"  minimumWidth="700"
	               height="200" width="700"/>
	          </ScrollPane>
	      </Border>
	</BoxPane>
    </ScrollPane>
</view:TheWindow>
